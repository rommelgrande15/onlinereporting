<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use Illuminate\Support\Facades\File;
use Illuminate\Support\Facades\Storage;
use App\InspectionPhotos;
use App\Checklist;
use App\Supplier;
use App\Cargo;
use App\Loading;
use App\DetailedPhoto;
use App\DetailedProduct;
use App\DetailedProductQty;
use App\Observation;
use App\DetailedPhotoDescription;
use App\InspectionInfo;
use Mail;

class ReportsController extends Controller
{
    public function sendChecklist(Request $request){

            DetailedPhoto::where('report_number',$request->input('report_no'))->delete();
            DetailedProduct::where('report_number',$request->input('report_no'))->delete();

            $file = $request->file('file');
            //set a unique file name
            $filename = uniqid().'.'.$file->getClientOriginalExtension();

            // //move the files to the correct folder
            $file->move('images/reports/'. $request->input('report_no').'/checklist', $filename);

            //save details to db
            $photo = Checklist::where('report_number', $request->input('report_no'))->first();
            if (!$photo) {
               $photo= new Checklist();
               $photo->report_number = $request->input('report_no');
            }            
            $photo->image_path = $filename;
            $photo->save();

            return response()->json([
                'message'=>'OK',
            ]);
    }


    public function sendSupplier(Request $request){

        $file = $request->file('file');
        //set a unique file name
        $filename = $request->input('label').'.'.$file->getClientOriginalExtension();

        // //move the files to the correct folder
        $file->move('images/reports/'. $request->input('report_no').'/supplier', $filename);
        $column = $request->input('label');
        
        $photo = Supplier::where('report_number', $request->input('report_no'))->first();
        if (!$photo) {
            $photo = new Supplier();
            $photo->report_number = $request->input('report_no');
        }
        $photo->$column = $filename;
        $photo->save();
    } 

    public function sendCargoInputs(Request $request){

        $cargo = Cargo::where('report_number',$request->input('report_number'))->first();
        if (!$cargo) {
            $cargo = new Cargo();
            $cargo->report_number = $request->input('report_number');
        }
        $cargo->inspector_arrival_time = $request->input('inspector_arrival_time');
        $cargo->cargo_ready_time = $request->input('cargo_ready_time');
        $cargo->container_arrival_time = $request->input('container_arrival_time');
        $cargo->loading_started = $request->input('loading_started');
        $cargo->inspection_finished = $request->input('inspection_finished');
        $cargo->loading_facility_cooperation = $request->input('loading_facility_cooperation');
        $cargo->container_number = $request->input('container_number');
        $cargo->shipping_seal_number = $request->input('shipping_seal_number');
        $cargo->sera_seal_number = $request->input('sera_seal_number');
        $cargo->container_size = $request->input('container_size');
        $cargo->container_status = $request->input('container_status');
        if ($request->input('container_status') == 'good') {
            $cargo->container_damage_1 = null;
            $cargo->container_damage_2 = null;
        }
        $cargo->holes = $request->input('holes');
        if ($request->input('holes') == 'no') {
            $cargo->cargo_holes = null;
        }
        $cargo->dents = $request->input('dents');
        if ($request->input('dents') == 'no') {
           $cargo->cargo_dents = null;
        }
        $cargo->floor_condition = $request->input('floor_condition');
        $cargo->doors_condition = $request->input('doors_condition');
        $cargo->light_proof = $request->input('light_proof');
        $cargo->palletized_cargo = $request->input('palletized_cargo');
        if ($request->input('palletized_cargo') == 'no') {
           $cargo->pallet_material = null;
           $cargo->fumigation_stamp = null;
        }

        $cargo->specify_pallet_material = $request->input('specify_pallet_material');
        $cargo->number_of_pallets_loaded = $request->input('number_of_pallets_loaded');
        $cargo->from_pallet_number = $request->input('from_pallet_number');
        $cargo->to_pallet_number = $request->input('to_pallet_number');
        $cargo->save();

        return response()->json([
            'message'=>'OK'
        ]);

    }

    public function sendCargoPhotos(Request $request){

        $file = $request->file('file');
        //set a unique file name
        $filename = uniqid().'.'.$file->getClientOriginalExtension();
        
        // //move the files to the correct folder
        $file->move('images/reports/'. $request->input('report_no').'/cargo', $filename);
        $column = $request->input('label');
        
        $photo = Cargo::where('report_number', $request->input('report_no'))->first();
        if (!$photo) {
            $photo = new Cargo();
            $photo->report_number = $request->input('report_no');
        }
        $photo->$column = $filename;
        $photo->save();
    } 

    public function sendLoading(Request $request){

        $file = $request->file('file');
        //set a unique file name
        $filename = uniqid().'.'.$file->getClientOriginalExtension();

        // //move the files to the correct folder
        $file->move('images/reports/'. $request->input('report_no').'/loading', $filename);
        $column = $request->input('label');
        
        $load = Loading::where('report_number', $request->input('report_no'))->first();
        if (!$load) {
            $load = new Loading();
            $load->report_number = $request->input('report_no');
        }
        $load->$column = $filename;
        $load->save();

        return response()->json([
            'message' => 'OK'
        ],200);
    } 

    public function sendDetailedPhoto(Request $request){

        $file = $request->file('file');
        //set a unique file name
        $filename = uniqid().'.'.$file->getClientOriginalExtension();

        // //move the files to the correct folder
        $file->move('images/reports/'. $request->input('report_no').'/detailedPhoto'.'/'.$request->input('photo_count').'/', $filename);

        $detailed = new DetailedPhoto();
        $detailed->report_number = $request->input('report_no');
        $detailed->photo_count = $request->input('photo_count');
        $detailed->photo_label = $request->input('photo_label');
        $detailed->image_data = $filename;

        if ($detailed->save()) {
            return response()->json([
                'message' => 'OK'
            ],200);
        }else{
            return response()->json([
                'message' => 'error'
            ],500);
        }
        
    }

    public function sendDetailedProduct(Request $request){

         $product = DetailedProduct::where('report_number',$request->input('report_no'))->where('product_count',$request->input('product_count'))->first();

         if (!$product) {
            $product = new DetailedProduct();
            $product->report_number = $request->input('report_no');
         }
        
        $product->product_count = $request->input('product_count');
        $product->invoice_no = $request->input('invoice_no');
        $product->po_no = $request->input('po_no');
        $product->model_number = $request->input('model_number');
        $product->description = $request->input('description');
        $product->package_qty = $request->input('package_qty');
        $product->pieces = $request->input('pieces');
        $product->material = $request->input('material');

        if ($product->save()) {
           return response()->json([
                'message' => 'OK'
            ],200);
        }else{
            return response()->json([
                'message' => 'Error'
            ],500);
        }
    }

    public function sendProductQty(Request $request){

        $product = DetailedProductQty::where('report_number', $request->input('report_no'))->first();
        if (!$product) {
             $product = new DetailedProductQty();
             $product->report_number = $request->input('report_no');
        }
        $product->match = $request->input('match');
        $product->boxes_opened_photos = $request->input('boxes_opened_photos');
        $product->boxes_opened_revision = $request->input('boxes_opened_revision');
        $product->total_boxes_opened = $request->input('total_boxes_opened');

        if ($product->save()) {
           return response()->json([
                'message' => 'OK'
            ],200);
        }else{
            return response()->json([
                'message' => 'Error'
            ],500);
        }
    }

    public function sendObservation(Request $request){

            if ($request->file('file')) {
                $file = $request->file('file');
                //set a unique file name
                $filename = uniqid().'.'.$file->getClientOriginalExtension();
                // //move the files to the correct folder
                $file->move('images/reports/'. $request->input('report_no').'/observation', $filename);
            }else{
                $filename = null;
            }
          

            //save details to db
            $photo= Observation::where('report_number',$request->input('report_no'))->first();
            if (!$photo) {
                $photo= new Observation();
                $photo->report_number = $request->input('report_no');
            }
            $photo->damaged_products = $request->input('damaged_products');
            $photo->damaged_product_photo = $filename;
            $photo->other_obsetvations = $request->input('other_observations');
            $photo->save();

            if ($photo->save()) {
                return response()->json([
                    'message'=>'OK',
                ],200);
            }
    }

    public function sendObservationNo(Request $request){

        
            $photo= Observation::where('report_number',$request->input('report_no'))->first();
            if (!$photo) {
                $photo= new Observation();
                $photo->report_number = $request->input('report_no');
            }
            $photo->damaged_products = $request->input('damaged_products');
            $photo->damaged_product_photo = null;
            $photo->other_obsetvations = $request->input('other_observations');
            $photo->save();

            if ($photo->save()) {
                return response()->json([
                    'message'=>'OK',
                ],200);
            }
    }
    public function sendPhotoDescription(Request $request){

        
        $desc = DetailedPhotoDescription::where('report_number',$request->input('report_no'))->where('photo_count',$request->input('photo_count'))->first();
        if (!$desc) {
            $desc = new DetailedPhotoDescription();
            $desc->report_number = $request->input('report_no');
        }
        $desc->photo_count = $request->input('photo_count');
        $desc->product_description = $request->input('product_description');
        if ($desc->save()) {
            return response()->json([
                'message'=>'OK'
            ],200);
        }
    }

    public function sendInspectionInfo(Request $request){

        $info = InspectionInfo::where('report_number',$request->input('report_no'))->first();
        if (!$info) {
            $info = new InspectionInfo();
            $info->report_number = $request->input('report_no');
        }
        $info->inspection_date = $request->input('inspection_date');
        $info->factory_address = $request->input('factory_address');
        $info->client_name = $request->input('client');
        $info->supplier_name = $request->input('supplier_name');
        $info->contact_person = $request->input('contact_person');
        $info->contact_number = $request->input('contact_number');

        if ($info->save()) {
            return response()->json([
                'message'=>'OK'
            ],200);
        }else{
            return response()->json([
                'error'=>'Internal Server Error'
            ],500);
        }
    }
}
